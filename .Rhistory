data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values ", no_of_missing_values)
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values \n", no_of_missing_values)
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value)
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
head(SLPopulation)
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
head(SLPopulation)
my_function(SLPopulation, "")
??mean()
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
cat("mean value ", mean_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
head(SLPopulation)
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
data_column[is.na(data_column)] = mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
data_column[is.na(data_column)] = mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
data_column[is.na(data_column)] = mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
data_column[is.na(data_column)] = mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
head(SLPopulation)
my_function(SLPopulation, "")
head(SLPopulation)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceData)
View(insuranceData)
View(SLPopulation)
View(insuranceData)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceData)
insuranceDataDup <- read.csv("~/Documents/Msc/DataAnalysis/CourseWork/insuranceDataDup.csv")
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
View(insuranceDataDup)
View(SLPopulation)
View(insuranceData)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(SLPopulation)
View(SLPopulation)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceData)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceData)
View(SLPopulation)
View(insuranceData)
library(readr)
insuranceDataDup <- read_csv("Documents/Msc/DataAnalysis/CourseWork/insuranceDataDup.csv")
View(insuranceDataDup)
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mean_value
cat("column mean", mean_value)
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
#head(SLPopulation)
my_function(insuranceDataDup, "")
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
mode(insuranceDataDup$district)
get_mode = function(dataSet){
uniqueItems <- unique(dataSet)
uniqueItems[which.max(tabulate(match(dataSet, uniqueItems)))]
}
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = get_mode(data_column)
cat("Mode value ", mode_value)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
#head(SLPopulation)
my_function(insuranceDataDup, "")
View(insuranceDataDup)
print(tabulate(c(2,3,5)))
print(tabulate(c(2,3,5,5)))
print(tabulate(c(2,3,4,5,5)))
print(tabulate(c(2,3,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,4,5,5,10)))
match(1, c(0,1,2,3,4,5,6))
match(1, c(0,1,2,30,4,5,6))
match(30, c(0,1,2,30,4,5,6))
match(c(0,1), c(0,1,2,30,4,5,6))
match(c(0,1,30), c(0,1,2,30,4,5,6))
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
unique(c(0,1,2,3,4))
unique(c(0,1,2,3,4,2,2))
unique(c(0,1,2,3,4,2,2,4))
unique(c(0,1,2,3,4,2,2,4,5))
unique(c(0,1,2,3,4,2,2,4,5,5))
unique(c(0,1,2,3,4,2,2,4,5,5,5))
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
unique(c(0,1,2,3,4,2,2,4,5,5,5))
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
match(c(0,1,30,6,6,6), c(0,1,2,30,4,5,6))
match(c(0,1,30,6,6,6,6,6,6), c(0,1,2,30,4,5,6))
which.max(1,2,3)
which.max(c(1,2,3))
which.max(c(1,20,3))
which.max(c(1,20,300))
which.max(c(1,20,300,670))
which.max(c(100000,20,300,670))
print(tabulate(c(2,3,4,4,4,4,5,5,10)))
print(tabulate(c(20,20,21,22,23,24,24,24,25)))
print(tabulate(c(201,201,211,221,231,241,241,241,251)))
print(tabulate(c(1,201,201,211,221,231,241,241,241,251)))
print(tabulate(c(0,1,201,201,211,221,231,241,241,241,251)))
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
correlation_num_kids_and_avg_premuim = cor(mean_premuim_wth_num_kids$x, mean_premuim_wth_num_kids$num_kids)
# importing libraries
library(ggplot2)
# imporing the cvs file
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read.csv("insuranceData.csv", header = TRUE)
head(insuranceData)
# Relationship between number of kids and premium
mean_premuim_wth_num_kids = aggregate(insuranceData$premium, list(num_kids = insuranceData$num_kids), mean)
ggplot(mean_premuim_wth_num_kids, aes(x = num_kids, y = x)) +
geom_point(col = "blue") +
xlab("Number of Kids") +
ylab("Average Premium") +
ggtitle("Average premium against number of kids")
correlation_num_kids_and_avg_premuim = cor(mean_premuim_wth_num_kids$x, mean_premuim_wth_num_kids$num_kids)
correlation_num_kids_and_avg_premuim
correlation_num_kids_and_avg_premuim = cor(mean_premuim_wth_num_kids$num_kids, mean_premuim_wth_num_kids$x)
correlation_num_kids_and_avg_premuim
correlation_num_kids_and_avg_premuim = cor(mean_premuim_wth_num_kids$num_kids, mean_premuim_wth_num_kids$x, method = c("pearson"))
correlation_num_kids_and_avg_premuim
# Relationship between number of kids and premium
mean_premium_wth_num_kids = aggregate(insuranceData$premium, list(num_kids = insuranceData$num_kids), mean)
ggplot(mean_premium_wth_num_kids, aes(x = num_kids, y = x)) +
geom_point(col = "blue") +
xlab("Number of Kids") +
ylab("Average Premium") +
ggtitle("Average premium against number of kids")
correlation_num_kids_and_avg_premuim = cor(mean_premium_wth_num_kids$num_kids, mean_premium_wth_num_kids$x, method = c("pearson"))
correlation_num_kids_and_avg_premuim
# Relationship between smoking status and premuim
mean_premium_for_smoking_status = aggregate(insuranceData$premium, list(smoking_status = insuranceData$smoking_status), mean)
mean_premium_for_smoking_status
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status)
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status,main = "Average premium and Smoking status", xlab = "Smoking Status", ylab = "Average Premium", col = "blue")
?barplot
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status,main = "Average premium and Smoking status", xlab = "Smoking Status", ylab = "Average Premium", col = "blue", plot = TRUE)
?barplot
source('~/Documents/Msc/DataAnalysis/CourseWork/descriptive_analysis.R', echo=TRUE)
# Relationship between smoking status and premuim
mean_premium_for_smoking_status = aggregate(insuranceData$premium, list(smoking_status = insuranceData$smoking_status), mean)
mean_premium_for_smoking_status
?barplot
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status,main = "Average premium and Smoking status", xlab = "Smoking Status", ylab = "Average Premium", col = "blue", plot = TRUE)
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status,main = "Average premium and Smoking status", xlab = "Smoking Status", ylab = "Average Premium", col = "blue", labels = TRUE)
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status,main = "Average premium and Smoking status", xlab = "Smoking Status", ylab = "Average Premium", col = "blue", labels = TRUE)
barplot(mean_premium_for_smoking_status$x, names.arg = mean_premium_for_smoking_status$smoking_status,main = "Average premium and Smoking status", xlab = "Smoking Status", ylab = "Average Premium", col = "blue")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = len))
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = x))
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = x), vjust = -0.3)
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = x), vjust = -0.3, size = 3.5)
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5)
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status") +
ylab("Average Premium")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status") +
ylab("Average Premium") +
ggtitle("Average preium againt smoking status")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status") +
ylab("Average Premium") +
ggtitle("Average premium againt smoking status")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status") +
ylab("Average Premium") +
ggtitle("Average premium againt smoking status")
# Relationship between district and premium
mean_premium_for_each_district = aggregate(insuranceData$premium, list(district = insuranceData$district), mean)
mean_premium_for_each_district
ggplot(data = mean_premium_for_each_district, aes(x = district, y = x) ) +
geom_bar(stat = "identity", fill = "blue")
ggplot(data = mean_premium_for_each_district, aes(x = district, y = x) ) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5)
ggplot(data = mean_premium_for_each_district, aes(x = district, y = x) ) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("District") +
ylab("Average Premium") +
ggtitle("Average premium for each district")
mean(insuranceData[insuranceData$district == 'trinco'])
mean(insuranceData[insuranceData$district == "trinco"])
mean(insuranceData[insuranceData$district == "trinco"]$district)
mean(insuranceData[insuranceData$district == "trinco"]$district)
mean(insuranceData[insuranceData$district = "trinco"]$district)
mean(insuranceData[insuranceData$district == "trinco"]$district)
mean(insuranceData[insuranceData$district == "trinco"]$premium)
mean(insuranceData[insuranceData$district == "trinco",]$premium)
mean(insuranceData[insuranceData$district == "galle",]$premium)
mean(insuranceData[insuranceData$district == "colombo",]$premium)
mean(insuranceData[insuranceData$district == "badulla",]$premium)
insuranceData[insuranceData$district == "badulla",]$premium
count(insuranceData[insuranceData$district == "badulla",]$premium)
length(insuranceData[insuranceData$district == "badulla",]$premium)
ggplot(data = mean_premium_for_each_district, aes(x = district, y = x) ) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("District") +
ylab("Average Premium") +
ggtitle("Average premium for each district")
mean_premium_for_smoking_status = aggregate(insuranceData$premium, list(smoking_status = insuranceData$smoking_status), mean)
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status") +
ylab("Average Premium") +
ggtitle("Average premium againt smoking status")
ggplot(data = mean_premium_for_smoking_status, aes(x = smoking_status, y = x)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("Smoking Status") +
ylab("Average Premium") +
ggtitle("Average premium against smoking status")
ggplot(data = mean_premium_for_each_district, aes(x = district, y = x) ) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = round(x,2)), vjust = -0.3, size = 3.5) +
xlab("District") +
ylab("Average Premium") +
ggtitle("Average premium for each district")
