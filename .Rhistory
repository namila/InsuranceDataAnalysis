print(is.numeric(dataSet[[column_name]]))
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
print(is.numeric(dataSet[[column_name]]))
if(is.numeric(dataSet[[column_name]]) == TRUE){
paste(column_name," is quantitative")
} else{
paste(column_name," is qualititative")
}
}
}
my_function(insuranceData, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
print(is.numeric(dataSet[[column_name]]))
if(is.numeric(dataSet[[column_name]]) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
if(is.numeric(dataSet[[column_name]]) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
my_function(insuranceData, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
if(is.numeric(data_column) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
is.na(insuranceData$age)
insuranceData$age[is.na(insuranceData$age)]
is.na(insuranceData$age)
is.na(insuranceData$gender)
insuranceData$gender[is.na(insuranceData$gender)]
insuranceData$gender[is.na(insuranceData$gender)]
is.na(insuranceData$smoking_status)
is.na(insuranceData$district)
sum(is.na(insuranceData$district))
sum(is.na(insuranceData$age))
sum(is.na(insuranceData[["age"]]))
sum(is.na(insuranceData[["age"]]))
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
print(paste("Number of missing values ", no_of_missing_values))
if(is.numeric(data_column) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
my_function(iris, "")
SLPopulation <- read.csv("~/Documents/Msc/DataAnalysis/CourseWork/population_by_district_in_census_years.csv", header=FALSE)
View(SLPopulation)
my_function(SLPopulation, "")
head(SLPopulation)
cat("asd","ss")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values ", no_of_missing_values)
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values \n", no_of_missing_values)
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value)
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
head(SLPopulation)
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
head(SLPopulation)
my_function(SLPopulation, "")
??mean()
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
cat("mean value ", mean_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
head(SLPopulation)
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
data_column[is.na(data_column)] = mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
data_column[is.na(data_column)] = mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
data_column[is.na(data_column)] = mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
data_column[is.na(data_column)] = mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
head(SLPopulation)
my_function(SLPopulation, "")
head(SLPopulation)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceData)
View(insuranceData)
View(SLPopulation)
View(insuranceData)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceData)
insuranceDataDup <- read.csv("~/Documents/Msc/DataAnalysis/CourseWork/insuranceDataDup.csv")
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
View(insuranceDataDup)
View(SLPopulation)
View(insuranceData)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(SLPopulation)
View(SLPopulation)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceData)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceData)
View(SLPopulation)
View(insuranceData)
library(readr)
insuranceDataDup <- read_csv("Documents/Msc/DataAnalysis/CourseWork/insuranceDataDup.csv")
View(insuranceDataDup)
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mean_value
cat("column mean", mean_value)
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
#head(SLPopulation)
my_function(insuranceDataDup, "")
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
mode(insuranceDataDup$district)
get_mode = function(dataSet){
uniqueItems <- unique(dataSet)
uniqueItems[which.max(tabulate(match(dataSet, uniqueItems)))]
}
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = get_mode(data_column)
cat("Mode value ", mode_value)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
#head(SLPopulation)
my_function(insuranceDataDup, "")
View(insuranceDataDup)
print(tabulate(c(2,3,5)))
print(tabulate(c(2,3,5,5)))
print(tabulate(c(2,3,4,5,5)))
print(tabulate(c(2,3,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,4,5,5,10)))
match(1, c(0,1,2,3,4,5,6))
match(1, c(0,1,2,30,4,5,6))
match(30, c(0,1,2,30,4,5,6))
match(c(0,1), c(0,1,2,30,4,5,6))
match(c(0,1,30), c(0,1,2,30,4,5,6))
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
unique(c(0,1,2,3,4))
unique(c(0,1,2,3,4,2,2))
unique(c(0,1,2,3,4,2,2,4))
unique(c(0,1,2,3,4,2,2,4,5))
unique(c(0,1,2,3,4,2,2,4,5,5))
unique(c(0,1,2,3,4,2,2,4,5,5,5))
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
unique(c(0,1,2,3,4,2,2,4,5,5,5))
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
match(c(0,1,30,6,6,6), c(0,1,2,30,4,5,6))
match(c(0,1,30,6,6,6,6,6,6), c(0,1,2,30,4,5,6))
which.max(1,2,3)
which.max(c(1,2,3))
which.max(c(1,20,3))
which.max(c(1,20,300))
which.max(c(1,20,300,670))
which.max(c(100000,20,300,670))
print(tabulate(c(2,3,4,4,4,4,5,5,10)))
print(tabulate(c(20,20,21,22,23,24,24,24,25)))
print(tabulate(c(201,201,211,221,231,241,241,241,251)))
print(tabulate(c(1,201,201,211,221,231,241,241,241,251)))
print(tabulate(c(0,1,201,201,211,221,231,241,241,241,251)))
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
library(readr)
insuranceData <- read_csv("Documents/Msc/DataAnalysis/CourseWork/insuranceData.csv")
View(insuranceData)
source('~/Documents/Msc/DataAnalysis/CourseWork/descriptive_analysis.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/descriptive_analysis.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/descriptive_analysis.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/descriptive_analysis.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/descriptive_analysis.R', echo=TRUE)
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read_csv("insuranceData.csv")
head(insuranceData)
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read_csv("insuranceData.csv", col_names = TRUE)
head(insuranceData)
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read.csv("insuranceData.csv", header = TRUE)
head(insuranceData)
# Analyzing age
summery(insuranceData$age)
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read.csv("insuranceData.csv", header = TRUE)
head(insuranceData)
# Overall summery of the dataset
summary(insuranceData)
# Analyzing age
summery(insuranceData$age)
# Analyzing age
summary(insuranceData$age)
hist(insuranceData$age)
boxplot(insuranceData$age, xlabel = "Age")
hist(insuranceData$age, xlabel = "Age")
hist(insuranceData$age, xlabel = "Age")
hist(insuranceData$age, main = "Histogram of Age")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", col="lemon")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", col="peach")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", col="green")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", col="blue")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", ylab = "Number of People" col="blue")
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", ylab = "Number of People", col="blue")
# Analyzing age
summary(insuranceData$age)
boxplot(insuranceData$age)
boxplot(insuranceData$age, main = "Box plot for Age", col= "blue")
boxplot(insuranceData$age, main = "Box plot for Age", col = "blue", xlab = "Age")
boxplot(insuranceData$age, main = "Box plot for Age", col = "blue", ylab = "Age")
# Histogram for age
hist(insuranceData$age, main = "Histogram of Age", xlab = "Age", ylab = "Number of People", col = "blue")
# box plot and outliers
outliers = boxplot(insuranceData$age, main = "Box plot for Age", col = "blue", ylab = "Age")$out
cat ("Outliers", "\n", outliers)
# variance
var(insuranceData$age)
# variance
var(insuranceData$age)
# standard diviation
sd(insuranceData)
# standard diviation
sd(insuranceData)
# standard diviation
sd(insuranceData$age)
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read.csv("insuranceData.csv", header = TRUE)
head(insuranceData)
summary(insuranceData)
