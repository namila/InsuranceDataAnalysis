my_function(insuranceData, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
print(is.numeric(dataSet[[column_name]]))
if(is.numeric(dataSet[[column_name]]) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
if(is.numeric(dataSet[[column_name]]) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
my_function(insuranceData, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
if(is.numeric(data_column) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
is.na(insuranceData$age)
insuranceData$age[is.na(insuranceData$age)]
is.na(insuranceData$age)
is.na(insuranceData$gender)
insuranceData$gender[is.na(insuranceData$gender)]
insuranceData$gender[is.na(insuranceData$gender)]
is.na(insuranceData$smoking_status)
is.na(insuranceData$district)
sum(is.na(insuranceData$district))
sum(is.na(insuranceData$age))
sum(is.na(insuranceData[["age"]]))
sum(is.na(insuranceData[["age"]]))
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
print(paste("Number of missing values ", no_of_missing_values))
if(is.numeric(data_column) == TRUE){
print(paste(column_name," is quantitative"))
} else{
print(paste(column_name," is qualititative"))
}
}
}
my_function(insuranceData, "")
my_function(iris, "")
SLPopulation <- read.csv("~/Documents/Msc/DataAnalysis/CourseWork/population_by_district_in_census_years.csv", header=FALSE)
View(SLPopulation)
my_function(SLPopulation, "")
head(SLPopulation)
cat("asd","ss")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values ", no_of_missing_values)
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values \n", no_of_missing_values)
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value)
}
} else{
print(paste(column_name," is qualititative \n"))
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value)
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
head(SLPopulation)
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column)
cat("mean value ", mean_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
head(SLPopulation)
my_function(SLPopulation, "")
??mean()
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
cat("mean value ", mean_value, "\n")
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
cat("mode value ", mode_value, "\n")
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
head(SLPopulation)
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
data_column[is.na(data_column)] = mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
data_column[is.na(data_column)] = mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
}
my_function(SLPopulation, "")
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
data_column[is.na(data_column)] = mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
data_column[is.na(data_column)] = mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
head(SLPopulation)
my_function(SLPopulation, "")
head(SLPopulation)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceData)
View(insuranceData)
View(SLPopulation)
View(insuranceData)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceData)
insuranceDataDup <- read.csv("~/Documents/Msc/DataAnalysis/CourseWork/insuranceDataDup.csv")
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
View(insuranceDataDup)
View(SLPopulation)
View(insuranceData)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(SLPopulation)
View(SLPopulation)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceData)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceDataDup)
View(insuranceData)
View(SLPopulation)
View(insuranceData)
library(readr)
insuranceDataDup <- read_csv("Documents/Msc/DataAnalysis/CourseWork/insuranceDataDup.csv")
View(insuranceDataDup)
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mean_value
cat("column mean", mean_value)
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = mode(data_column)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
#head(SLPopulation)
my_function(insuranceDataDup, "")
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
mode(insuranceDataDup$district)
get_mode = function(dataSet){
uniqueItems <- unique(dataSet)
uniqueItems[which.max(tabulate(match(dataSet, uniqueItems)))]
}
my_function = function(dataSet, parameter){
for(column_name in colnames(dataSet)){
data_column = dataSet[[column_name]]
no_of_missing_values = sum(is.na(data_column))
if(is.numeric(data_column) == TRUE){
cat(column_name," is quantitative \n")
if(no_of_missing_values > 0){
mean_value = mean(data_column, na.rm = TRUE)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mean_value
}
} else{
cat(column_name," is qualititative \n")
if(no_of_missing_values > 0){
mode_value = get_mode(data_column)
cat("Mode value ", mode_value)
dataSet[[column_name]][is.na(dataSet[[column_name]])] =  mode_value
}
}
cat("Number of missing values", no_of_missing_values, "\n")
}
head(dataSet)
}
#head(SLPopulation)
my_function(insuranceDataDup, "")
View(insuranceDataDup)
print(tabulate(c(2,3,5)))
print(tabulate(c(2,3,5,5)))
print(tabulate(c(2,3,4,5,5)))
print(tabulate(c(2,3,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,4,5,5)))
print(tabulate(c(2,3,4,4,4,4,5,5,10)))
match(1, c(0,1,2,3,4,5,6))
match(1, c(0,1,2,30,4,5,6))
match(30, c(0,1,2,30,4,5,6))
match(c(0,1), c(0,1,2,30,4,5,6))
match(c(0,1,30), c(0,1,2,30,4,5,6))
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
unique(c(0,1,2,3,4))
unique(c(0,1,2,3,4,2,2))
unique(c(0,1,2,3,4,2,2,4))
unique(c(0,1,2,3,4,2,2,4,5))
unique(c(0,1,2,3,4,2,2,4,5,5))
unique(c(0,1,2,3,4,2,2,4,5,5,5))
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
unique(c(0,1,2,3,4,2,2,4,5,5,5))
match(c(0,1,30,6), c(0,1,2,30,4,5,6))
match(c(0,1,30,6,6,6), c(0,1,2,30,4,5,6))
match(c(0,1,30,6,6,6,6,6,6), c(0,1,2,30,4,5,6))
which.max(1,2,3)
which.max(c(1,2,3))
which.max(c(1,20,3))
which.max(c(1,20,300))
which.max(c(1,20,300,670))
which.max(c(100000,20,300,670))
print(tabulate(c(2,3,4,4,4,4,5,5,10)))
print(tabulate(c(20,20,21,22,23,24,24,24,25)))
print(tabulate(c(201,201,211,221,231,241,241,241,251)))
print(tabulate(c(1,201,201,211,221,231,241,241,241,251)))
print(tabulate(c(0,1,201,201,211,221,231,241,241,241,251)))
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
View(insuranceDataDup)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
source('~/Documents/Msc/DataAnalysis/CourseWork/custom_function.R', echo=TRUE)
# looking at the relationship between age and premuim
ggplot(insuranceData, aes(x = age, y = premium, color = gender)) + geom_point()
library(ggplot2)
ggplot(insuranceData, aes(x = gender, y = premium, color = district)) + geom_point()
setwd("/Users/namilap/Documents/Msc/DataAnalysis/CourseWork")
insuranceData = read.csv("insuranceData.csv", header = TRUE)
head(insuranceData)
ggplot(insuranceData, aes(x = gender, y = premium, color = district)) + geom_point()
pearson_correlation_coefficient = cor(insuranceData$age, insuranceData$premium, method = c("pearson"))
pearson_correlation_coefficient
# looking at the relationship between age and premuim
ggplot(insuranceData, aes(x = age, y = premium, color = gender)) + geom_point()
# looking at the relationship between gender and premuim
spearman_correlation_coefficient = cor(insuranceData$gender, insuranceData$premium, method = c("spearman"))
spearman_correlation_coefficient
?factor()
# looking at the relationship between gender and premuim
coded_gender = factor(insuranceData$gender,2)
coded_gender
# looking at the relationship between gender and premuim
coded_gender = factor(insuranceData$gender, 2, labels = c(0,1))
coded_gender
# looking at the relationship between gender and premuim
coded_gender = factor(insuranceData$gender, 2, levels = c(0,1))
coded_gender
coded_gender = factor(insuranceData$gender, 2, levels, labels = levels )
coded_gender
coded_gender = factor(insuranceData$gender)
coded_gender
coded_gender = as.factor(insuranceData$gender)
coded_gender
coded_gender
coded_gender = factor(insuranceData$gender)
coded_gender
coded_gender = factor(insuranceData$gender)
spearman_correlation_coefficient = cor(coded_gender, insuranceData$premium, method = c("spearman"))
spearman_correlation_coefficient
coded_gender = factor(insuranceData$gender)
coded_gender
as.factor(insuranceData$gender)
as.factor(insuranceData$gender)
coded_gender = as.factor(insuranceData$gender)
levels(coded_gender) = relevel(coded_gender, ref = "male")
coded_gender
coded_gender = factor(insuranceData$gender, levels = levels(insuranceData$gender), labels = c(0,1))
coded_gender
heas
coded_gender = factor(insuranceData$gender, levels = levels(insuranceData$gender), labels = c(0,1))
head(insuranceData$age)
coded_gender = factor(insuranceData$gender, levels = levels(insuranceData$gender), labels = c(0,1))
head(insuranceData$gender)
head(coded_gender)
coded_gender = factor(insuranceData$gender, levels = levels(insuranceData$gender), labels = c(0,1))
head(coded_gender)
spearman_correlation_coefficient = cor(coded_gender, insuranceData$premium, method = c("spearman"))
coded_gender = factor(insuranceData$gender, levels = levels(insuranceData$gender), labels = c(0,1))
head(coded_gender)
class(coded_gender)
head(coded_gender)
class(coded_gender)
unclass(coded_gender)
coded_gender
spearman_correlation_coefficient = cor(coded_gender, insuranceData$premium, method = c("spearman"))
# looking at the relationship between age and premuim
ggplot(insuranceData, aes(x = age, y = premium, color = gender)) + geom_point()
premium_summary_male=summary(insuranceData[insuranceData$gender == "male",]$premium)
premium_summary_male
premium_summary_female=summary(insuranceData[insuranceData$gender == "female",]$premium)
premium_summary_female
# Looking at the relationship between BMI and Premium
ggplot(insuranceData, aes(x = bmi, y = premium, color = gender)) + geom_point()
pearson_correlation_coefficient = cor(insuranceData$bmi, insuranceData$premium, method = c("pearson"))
pearson_correlation_coefficient
?cor()
# Relationship between number of kids and premium
ggplot(insuranceData, aes(x = num_kids, y = premium, color = gender)) + geom_point()
